From the 7-base_geometry Module
======================

Using ``BaseGeometry``
-------------------

Importing the function (BaseGeometry) from the module:
    >>> BaseGeometry = __import__("7-base_geometry").BaseGeometry

Checking for module docstring:
     >>> m = __import__("7-base_geometry").__doc__
     >>> len(m) > 1
     True

Checking for class docstring:
     >>> c = __import__("7-base_geometry").BaseGeometry.__doc__
     >>> len(c) > 1
     True

Checking for method docstring:
     >>> mod = __import__("7-base_geometry").BaseGeometry.area.__doc__
     >>> len(mod) > 1
     True

Checking for integer_validator method docstring:
     >>> mod = __import__("7-base_geometry").BaseGeometry.integer_validator.__doc__
     >>> len(mod) > 1
     True

Checking that BaseGeometry has no base classes:
     >>> BaseGeometry.__bases__
     (<class 'object'>,)

Checking for area method:
     >>> bg = BaseGeometry()
     >>> bg.area()
     Traceback (most recent call last):
     ...
     Exception: area() is not implemented

Checking for integer_validator method:
     >>> bg.integer_validator("my_int", 12)
     >>> bg.integer_validator("width", 89)

Checking for non-integer value:
     >>> bg.integer_validator("name", "John")
     Traceback (most recent call last):
     ...
     TypeError: name must be an integer

Checking for zero value:
     >>> bg.integer_validator("age", 0)
     Traceback (most recent call last):
     ...
     ValueError: age must be greater than 0

Checking for negative value:
     >>> bg.integer_validator("distance", -4)
     Traceback (most recent call last):
     ...
     ValueError: distance must be greater than 0
